1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "airlock.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "airlock.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "airlock.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "airlock.selectorLabels" . }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Check the health of your deployment:
   kubectl get pods -l "{{ include "airlock.selectorLabels" . }}" -n {{ .Release.Namespace }}

3. View logs:
   kubectl logs -l "{{ include "airlock.selectorLabels" . }}" -n {{ .Release.Namespace }} -f

4. Run deployment tests:
   helm test {{ .Release.Name }} -n {{ .Release.Namespace }}

5. Monitor your deployment:
   - Liveness: http://your-airlock-url/live
   - Readiness: http://your-airlock-url/ready
   - Info: http://your-airlock-url/info
   {{- if .Values.config.observability.metrics.enabled }}
   - Metrics: http://your-airlock-url{{ .Values.config.observability.metrics.path }}
   {{- end }}

{{- if .Values.persistence.enabled }}
6. Persistent storage:
   Your audit data is stored in a persistent volume. To view the PVC:
   kubectl get pvc {{ include "airlock.fullname" . }}-data -n {{ .Release.Namespace }}
{{- end }}

{{- if .Values.networkPolicy.enabled }}
7. Network Policy:
   Network policies are enabled. Ensure your ingress controller and monitoring
   systems are properly labeled to access the Airlock pods.
{{- end }}

{{- if not .Values.ingress.enabled }}
WARNING: Ingress is not enabled. You may need to configure ingress or port-forwarding
to access the Airlock gateway from outside the cluster.
{{- end }}

{{- if eq .Values.config.auth.oidc_issuer "https://auth.example.com/.well-known/openid-configuration" }}
WARNING: Default OIDC issuer is configured. Please update the auth.oidc_issuer
value in your values.yaml file to point to your actual OIDC provider.
{{- end }}

For more information about MCP Airlock, visit:
https://github.com/ik-labs/mcp-airlock