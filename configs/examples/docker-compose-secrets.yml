# Example Docker Compose configuration with secrets management
# This shows how to use Docker secrets and environment variables

version: '3.8'

services:
  mcp-airlock:
    image: mcp-airlock:latest
    ports:
      - "8080:8080"
    environment:
      # Public configuration via environment variables
      - PUBLIC_BASE_URL=http://localhost:8080
      - OIDC_ISSUER_URL=https://auth.example.com/.well-known/openid-configuration
      - OIDC_AUDIENCE=mcp-airlock-dev
      - REQUIRED_GROUP=developers
      - LOG_LEVEL=debug
      - DEV_TOOLS_URL=http://dev-tools:3000
    secrets:
      # Sensitive configuration via Docker secrets
      - oidc_client_secret
      - database_url
      - tls_cert
      - tls_key
      - code_server_api_key
    volumes:
      - ./workspace:/workspace
      - ./configs:/app/configs
      - ./data:/app/data
      - /tmp/airlock:/tmp/airlock
    depends_on:
      - postgres
      - dev-tools
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=airlock
      - POSTGRES_USER=airlock
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  dev-tools:
    image: node:18-alpine
    command: ["npm", "start"]
    working_dir: /app
    volumes:
      - ./dev-tools:/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14268:14268"
    environment:
      - COLLECTOR_OTLP_ENABLED=true

secrets:
  oidc_client_secret:
    file: ./secrets/oidc_client_secret.txt
  database_url:
    file: ./secrets/database_url.txt
  tls_cert:
    file: ./secrets/tls_cert.pem
  tls_key:
    file: ./secrets/tls_key.pem
  code_server_api_key:
    file: ./secrets/code_server_api_key.txt
  db_password:
    file: ./secrets/db_password.txt

volumes:
  postgres_data:

networks:
  default:
    driver: bridge