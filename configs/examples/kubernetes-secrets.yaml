# Example Kubernetes Secret configuration for MCP Airlock
# This shows how to set up secrets that will be mounted into the container

apiVersion: v1
kind: Secret
metadata:
  name: mcp-airlock-secrets
  namespace: default
type: Opaque
data:
  # Base64 encoded values - replace with actual encoded secrets
  oidc-client-secret: <base64-encoded-client-secret>
  database-url: <base64-encoded-database-url>
  s3-bucket-url: <base64-encoded-s3-bucket-url>
  tls-cert: <base64-encoded-tls-certificate>
  tls-key: <base64-encoded-tls-private-key>
  code-server-api-key: <base64-encoded-api-key>
  storage-encryption-key: <base64-encoded-encryption-key>

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mcp-airlock-env
  namespace: default
data:
  PUBLIC_BASE_URL: "https://airlock.example.com"
  OIDC_ISSUER_URL: "https://auth.example.com/.well-known/openid-configuration"
  OIDC_AUDIENCE: "mcp-airlock-prod"
  REQUIRED_GROUP: "mcp.users"
  LOG_LEVEL: "info"
  JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-airlock
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mcp-airlock
  template:
    metadata:
      labels:
        app: mcp-airlock
    spec:
      containers:
      - name: airlock
        image: mcp-airlock:latest
        ports:
        - containerPort: 8080
        env:
        # Environment variables from ConfigMap
        - name: PUBLIC_BASE_URL
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: PUBLIC_BASE_URL
        - name: OIDC_ISSUER_URL
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: OIDC_ISSUER_URL
        - name: OIDC_AUDIENCE
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: OIDC_AUDIENCE
        - name: REQUIRED_GROUP
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: REQUIRED_GROUP
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: LOG_LEVEL
        - name: JAEGER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: mcp-airlock-env
              key: JAEGER_ENDPOINT
        volumeMounts:
        # Mount secrets as files
        - name: secrets-volume
          mountPath: /var/secrets
          readOnly: true
        - name: config-volume
          mountPath: /etc/airlock
          readOnly: true
        # Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        # Resource limits
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: secrets-volume
        secret:
          secretName: mcp-airlock-secrets
          items:
          - key: oidc-client-secret
            path: oidc-client-secret
          - key: database-url
            path: database-url
          - key: s3-bucket-url
            path: s3-bucket-url
          - key: tls-cert
            path: tls-cert
          - key: tls-key
            path: tls-key
          - key: code-server-api-key
            path: code-server-api-key
          - key: storage-encryption-key
            path: storage-encryption-key
      - name: config-volume
        configMap:
          name: mcp-airlock-config